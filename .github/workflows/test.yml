---
name: Test

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '**'     # matches every branch
      - '!main'  # excludes main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tflint:
    runs-on:
      - arc
    name: tflint
    steps:
      - uses: actions/checkout@master

      - uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest

      - name: Show version
        run: tflint --version

      - name: Init tflint
        run: tflint --init

      - name: Run tflint
        run: tflint -f compact

  checkov:
    runs-on:
      - arc
    name: checkov
    steps:
      - uses: actions/checkout@master

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          # yamllint disable-line rule:truthy # optional: display only failed checks
          quiet: true
          # optional: do not return an error code if there are failed checks.
          soft_fail: true
          # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          framework: terraform
          # optional: the output format, one of: cli, json, junitxml, github_failed_only
          output_format: github_failed_only
          download_external_modules: false
          log_level: WARNING
          # optional: Define what UID and / or what GID to run the container under to prevent permission issues
          container_user: 1000

  security:
    runs-on:
      - arc
    name: snyk
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Vulnerability scan
        uses: snyk/actions/iac@master
        with:
          command: monitor
          args: --severity-threshold=low
      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Snyk CLI
        run: npm install -g snyk
      - name: snyk monitor
        run: snyk iac test --report
        env:
          SNYK_TOKEN: ${{ secrets.ARC_SNYK_TOKEN }}
